{"ast":null,"code":"import _toConsumableArray from \"E:\\\\Git-Repo\\\\ReactNative\\\\React-JS\\\\redduuxWithFluux\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport { combineReducers } from 'redux';\nimport { ADD_TODO } from '../action/actions.js';\n\nfunction todo(state, action) {\n  switch (action.type) {\n    case ADD_TODO:\n      return {\n        id: action.id,\n        text: action.text\n      };\n\n    default:\n      return state;\n  }\n}\n\nfunction todos() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_TODO:\n      return [].concat(_toConsumableArray(state), [todo(undefined, action)]);\n\n    default:\n      return state;\n  }\n}\n\nvar todoApp = combineReducers({\n  todos: todos\n});\nexport default todoApp;","map":{"version":3,"sources":["E:\\Git-Repo\\ReactNative\\React-JS\\redduuxWithFluux\\src\\reducer\\reducers.js"],"names":["combineReducers","ADD_TODO","todo","state","action","type","id","text","todos","undefined","todoApp"],"mappings":";AAAA,SAASA,eAAT,QAAgC,OAAhC;AACA,SAASC,QAAT,QAAyB,sBAAzB;;AAEA,SAASC,IAAT,CAAcC,KAAd,EAAqBC,MAArB,EAA6B;AACzB,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKJ,QAAL;AACI,aAAO;AACHK,QAAAA,EAAE,EAAEF,MAAM,CAACE,EADR;AAEHC,QAAAA,IAAI,EAAEH,MAAM,CAACG;AAFV,OAAP;;AAIJ;AACI,aAAOJ,KAAP;AAPR;AASH;;AACD,SAASK,KAAT,GAAmC;AAAA,MAApBL,KAAoB,uEAAZ,EAAY;AAAA,MAARC,MAAQ;;AAC/B,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKJ,QAAL;AACI,0CACOE,KADP,IAEID,IAAI,CAACO,SAAD,EAAYL,MAAZ,CAFR;;AAIJ;AACI,aAAOD,KAAP;AAPR;AASH;;AACD,IAAMO,OAAO,GAAGV,eAAe,CAAC;AAC5BQ,EAAAA,KAAK,EAALA;AAD4B,CAAD,CAA/B;AAGA,eAAeE,OAAf","sourcesContent":["import { combineReducers } from 'redux'\r\nimport { ADD_TODO } from '../action/actions.js'\r\n\r\nfunction todo(state, action) {\r\n    switch (action.type) {\r\n        case ADD_TODO:\r\n            return {\r\n                id: action.id,\r\n                text: action.text,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\nfunction todos(state = [], action) {\r\n    switch (action.type) {\r\n        case ADD_TODO:\r\n            return [\r\n                ...state,\r\n                todo(undefined, action)\r\n            ]\r\n        default:\r\n            return state\r\n    }\r\n}\r\nconst todoApp = combineReducers({\r\n    todos\r\n})\r\nexport default todoApp"]},"metadata":{},"sourceType":"module"}